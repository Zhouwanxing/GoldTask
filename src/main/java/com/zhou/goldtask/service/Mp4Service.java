package com.zhou.goldtask.service;

import cn.hutool.core.date.DateUtil;
import cn.hutool.http.HttpUtil;
import cn.hutool.json.JSONObject;
import cn.hutool.json.JSONUtil;
import com.zhou.goldtask.entity.*;
import com.zhou.goldtask.repository.Mp4Dao;
import com.zhou.goldtask.repository.Mp4NewRepository;
import com.zhou.goldtask.repository.Mp4Repository;
import com.zhou.goldtask.repository.UrlRepository;
import com.zhou.goldtask.utils.Utils;
import com.zhou.goldtask.utils.aes.AESUtil;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.data.domain.Pageable;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.text.DateFormat;
import java.time.LocalDate;
import java.time.YearMonth;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

@Service
@Slf4j
public class Mp4Service {
    @Resource
    private StringRedisTemplate stringRedisTemplate;
    @Resource
    private Mp4Repository mp4Repository;
    @Resource
    private Mp4NewRepository mp4NewRepository;
    @Resource
    private Mp4Dao mp4Dao;
    @Resource
    private FileService fileService;
    @Resource
    private UrlRepository urlRepository;

    public void test0927() {
        LocalDate today = LocalDate.now();
        YearMonth currentYearMonth = YearMonth.from(today);

        DateTimeFormatter yyyyMM = DateTimeFormatter.ofPattern("yyyyMM");
        String yearMonth = null;
        List<String> list = null;
        for (int i = 0; i < 80; i++) {
            yearMonth = currentYearMonth.minusMonths(i).format(yyyyMM);
            list = fileService.getFileContentList(yearMonth);
            for (String key : list) {
                if (!mp4Dao.isUpdate(key)) {
                    System.out.println(key);
                }
            }
        }
    }

    public void test0927_1() {
        List<Mp4Entity> all = mp4Dao.findAll();
        System.out.println(all.size());
        for (Mp4Entity one : all) {
            if (mp4Dao.isUpdate(one.getUrl(), one.getFlag())) {
                mp4Repository.deleteById(one.get_id());
            }
        }
    }


    public void saveOne() {
        Mp4Entity entity = Mp4Entity.builder()
                .name("textLink")
                .path("menuHref")
                .url("https://zzzz/zz/zz/zz/zz")
                .date("date")
                .img("img")
                .build().urlToId().dateToDate();
        mp4Repository.save(entity);
    }

    public List<Mp4NewEntity> pageShowList(Integer page, boolean isShowLike, String path) {
        return mp4Dao.findByPage(page, isShowLike, path);
//        return handleList(mp4Dao.findByPage(page, isShowLike));
    }

    public List<Mp4NewEntity> searchLike(Mp4LikeDto dto) {
        return mp4Dao.findByDto(dto);
    }

    public long searchLikeCount(Mp4LikeDto dto) {
        return mp4Dao.searchLikeCount(dto);
    }

    public long count(boolean isShowLike, String path) {
        return mp4Dao.count(isShowLike, path);
    }

    public void genNew(List<String> urls) {
        if (urls == null || urls.size() == 0) {
            urls = mp4Dao.getUrls();
        }
        Mp4ConfigEntity config = mp4Dao.getMp4Config();
        if (config == null) {
            return;
        }
        String str = "";
        List<Mp4BaseEntity> list = null;
        try {
            String base = AESUtil.decryptJsonBase64(str, config.getKey(), config.getIv());
            list = JSONUtil.parseArray(base).toList(Mp4BaseEntity.class);
            if (list.size() == 0) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        boolean isDown = false;
        if (StringUtils.isNotBlank(config.getApiUrl())) {
            isDown = handleOtherNew(config.getApiUrl(), config, list.stream().filter(item -> "movie".equals(item.getTbname())).collect(Collectors.toList()));
        }
        if (!isDown) {
            for (String url : urls) {
                if (handleOtherNew(url, config, list.stream().filter(item -> "movie".equals(item.getTbname())).collect(Collectors.toList()))) {
                    break;
                }
            }
        }
    }

    public void updatePath(){
        Mp4ConfigEntity config = mp4Dao.getMp4Config();
        if (config == null) {
            return;
        }
        String str = "";
        List<Mp4BaseEntity> list = null;
        try {
            String base = AESUtil.decryptJsonBase64(str, config.getKey(), config.getIv());
            list = JSONUtil.parseArray(base).toList(Mp4BaseEntity.class);
            if (list.size() == 0) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        list = list.stream().filter(item -> "movie".equals(item.getTbname())).collect(Collectors.toList());
        for (Mp4BaseEntity base : list) {
            for (Mp4BaseItemEntity item : base.getItems()) {
                System.out.println(item.getClassid() + "=" + item.getClasspath());
                mp4Dao.updateBatchPath(item.getClassid(), "/" + item.getClasspath() + "/");
            }
        }
    }

    public void testNew() {
        String url = mp4Dao.getUrls().get(0);
        Mp4ConfigEntity config = mp4Dao.getMp4Config();
        if (config == null) {
            return;
        }
        Mp4JsonItemEntity entity = null;
        List<String> ids = new ArrayList<>();
        List<String> notExistIds = null;
//        for (int i = 56725; i > 10000; i--) {
        for (int i = 1; i < 120000; i++) {
            ids.add(i + "");
            if (ids.size() % 500 == 0) {
                notExistIds = mp4Dao.notExistIds(ids);
                for (String id : notExistIds) {
                    System.out.println(id);
                    entity = new Mp4JsonItemEntity();
                    entity.setId(Integer.parseInt(id));
                    handleOneMp4(url, entity, "", config);
                }
                ids.clear();
            }
        }
    }


    private boolean checkIsNo(String url) {
        try {
            String s = HttpUtil.get(url + "/json/a.json", 2000);
            JSONObject obj = JSONUtil.parseObj(s);
            return false;
        } catch (Exception e) {
            return true;
        }
    }

    private boolean handleOtherNew(String url, Mp4ConfigEntity config, List<Mp4BaseEntity> list) {
        if (checkIsNo(url)) {
            return false;
        }
        List<Mp4BaseItemEntity> items = null;
        for (Mp4BaseEntity one : list) {
            items = one.getItems();
            for (Mp4BaseItemEntity item : items) {
                handOneItem(url, item, config);
            }
        }
        return true;
    }

    private void handOneItem(String url, Mp4BaseItemEntity item, Mp4ConfigEntity config) {
        int count = 1;
        int errorCount = 0;
        List<Mp4JsonItemEntity> list = null;
        if ("av".equals(item.getClasspath())) {
            return;
        }
        while (errorCount < 28) {
            list = getJsonItem(url, config, item.getClassid(), count++);
            if (list == null || list.size() == 0) {
                break;
            }
            log.info("{},{},{}", count, item.getClasspath(), list.size());
            for (Mp4JsonItemEntity one : list) {
                try {
                    errorCount += handleOneMp4(url, one, item.getClasspath(), config);
                } catch (Exception e) {
                    errorCount++;
                }
            }
            System.gc();
        }
    }

    private int handleOneMp4(String url, Mp4JsonItemEntity one, String classpath, Mp4ConfigEntity config) {
        if (Boolean.TRUE.equals(stringRedisTemplate.hasKey(Utils.Mp4RedisKey + one.getId()))) {
            return 1;
        }
        stringRedisTemplate.opsForValue().set(Utils.Mp4RedisKey + one.getId(), one.getId() + "", 200, TimeUnit.DAYS);
        String urlString = url + "/json/video/" + one.getId() + ".json";
        String body = null;
        Mp4JsonItemEntity newOne = null;
        try {
            body = HttpUtil.get(urlString, 3000);
            body = AESUtil.decryptJsonBase64(JSONUtil.parseObj(body).getStr("data"), config.getKey(), config.getIv());
            newOne = JSONUtil.toBean(body, Mp4JsonItemEntity.class);
        } catch (Exception e) {
            return 1;
        }
        Mp4NewEntity entity = Mp4NewEntity.builder()._id(newOne.getId() + "").classid(newOne.getClassid())
                .date(newOne.newSTimeToDate()).name(newOne.getTitle()).img(newOne.getTitlepic()).yulan(newOne.getYulan())
                .m3u8(newOne.getM3u8()).url(newOne.getMp4()).path("/" + classpath + "/").tags(newOne.handleKeyboard()).build();
        System.out.println(entity.get_id() + "==");
        try {
            mp4NewRepository.insert(entity);
        } catch (Exception ignored) {
            return 1;
        }
        return 0;
    }

    private List<Mp4JsonItemEntity> getJsonItem(String url, Mp4ConfigEntity config, int classId, int page) {
        String urlString = url + "/json/category/" + classId + "-" + page + ".json";
        try {
            String body = HttpUtil.get(urlString, 5000);
            String str = JSONUtil.parseObj(body).getStr("data");
            body = AESUtil.decryptJsonBase64(str, config.getKey(), config.getIv());
            Mp4JsonEntity bean = JSONUtil.toBean(body, Mp4JsonEntity.class);
            log.info("classId:{},page:{},all:{},{},current:{}", classId, page, bean.getTotal(), bean.getTotal() / 28, bean.getData().size());
            return bean.getData();
        } catch (Exception e) {
            log.warn("{}", urlString, e);
            return null;
        }
    }


    public boolean handleOther(String url) {
        List<String> paths = mp4Dao.distinctPath();
        boolean isIn = false;
        for (String path : paths) {
            if (oneType(url, path)) {
                isIn = true;
            }
        }
        if(isIn && DateUtil.thisDayOfMonth() == 28){
            startCheckNo(url);
        }
        return isIn;
    }

    public void startCheckNo(String url) {
        int m = DateUtil.thisMonth() + 1;
        String mon = m > 10 ? "" + m : "0" + m;
        String start = "/html/" + DateUtil.thisYear() + mon + "/";
        Set<String> keys = stringRedisTemplate.keys(Utils.Mp4RedisKey + start + "*");
        if (keys == null) {
            return;
        }
        List<Integer> num = new ArrayList<>();
        String[] split, split1;
        String last;
        for (String key : keys) {
            try {
                split = key.split("/");
                last = split[split.length - 1];
                split1 = last.split("\\.");
                num.add(Integer.parseInt(split1[0]));
            } catch (Exception ignored) {

            }
        }
        List<Integer> collect = num.stream().sorted().collect(Collectors.toList());
        log.info("{}", collect.size());
        for (int i = collect.get(0); i < collect.get(collect.size() - 1); i++) {
            if (!num.contains(i)) {
                handleOneLast(url + start + i + ".html", "", "", "");
            }
        }
    }

    public boolean oneType(String url, String menuHref, int page) {
        try {
            String newUrl = url + menuHref + (page > 1 ? "index_" + page + ".html" : "");
            Elements channels = Jsoup.connect(newUrl).timeout(5000).get().getElementsByClass("preview-item");
            log.info("{}\n{}", newUrl, channels.size());
            if (channels.size() == 0) {
                return false;
            }
            String mp4Href;
            for (Element channel : channels) {
                mp4Href = channel.getElementsByTag("a").attr("href");
                if (Boolean.TRUE.equals(stringRedisTemplate.hasKey(Utils.Mp4RedisKey + mp4Href))) {
                    continue;
                }
                stringRedisTemplate.opsForValue().set(Utils.Mp4RedisKey + mp4Href, menuHref, 200, TimeUnit.DAYS);
                handleOneLast(url + mp4Href,
                        channel.getElementsByTag("i").text(),
                        channel.getElementsByTag("img").attr("data-original"), menuHref);
            }
            return true;
        } catch (Exception e) {
            log.warn("", e);
            return false;
        }
    }

    private boolean oneType(String url, String menuHref) {
        if (menuHref == null || "".equals(menuHref)) {
            return false;
        }
        boolean b = oneType(url, menuHref, 1);
        oneType(url, menuHref, 2);
        return b;
    }

    private void handleOneLast(String url, String date, String img, String menuHref) {
        try {
            Document doc = Jsoup.connect(url).timeout(5000).get();
            String[] textLinks = doc.getElementsByClass("textlink").get(0).html().split("&nbsp;&nbsp;");
            String textLink = textLinks[textLinks.length - 1];
            String download = doc.getElementsByClass("download").get(0).getElementsByTag("a").get(0).attr("href");
            String href = url;
            try {
                href = url.split(".com")[1];
            } catch (Exception ignored) {

            }
            if (textLink == null || "".equals(textLink) || "".equals(download)) {
                log.info("{}\n{}", url, doc.body());
            } else {
                Mp4Entity entity = Mp4Entity.builder()
                        .name(textLink)
                        .path(menuHref)
                        .url(download)
                        .date(date)
                        .img(img)
                        .href(href)
                        .insertTime(DateUtil.now())
                        .build().urlToId().dateToDate();
                if (idNotExists(entity)) {
                    try {
                        mp4Repository.insert(entity);
                    } catch (Exception ignored) {

                    }
                }
            }
        } catch (Exception e) {
            log.warn("", e);
        }
    }

    private boolean idNotExists(Mp4Entity entity) {
        String fileName = entity.getIdStartDate();
        if (fileName == null || "".equals(fileName)) {
            return true;
        }
        boolean exists = fileService.getFileContentList(fileName).contains(entity.get_id());
        if (exists) {
            log.info("文件检测存在该id:{}", entity.get_id());
        }
        return !exists;
    }

    public void ajaxUrl(String url) {
        log.info("{} start.", url);
        try {
            Document doc = Jsoup.connect(url).timeout(5000).get();
            log.info("{}", doc.body());
        } catch (Exception e) {
            try {
                String s = HttpUtil.get(url, 5000);
                log.info("{}", s);
            } catch (Exception ignored) {

            }
        }
    }

    public void updateLike(String id, String flag) {
        mp4Dao.updateLike(id, flag);
    }

    public List<String> getAllPath() {
        return mp4Dao.getAllPath();
    }

    public List<PathCountEntity> getAllCountAndPath(){
        return mp4Dao.getAllCountAndPath();
    }

    public String getInXxUrl(String id) {
        Mp4Entity mp4 = mp4Repository.findById(id).orElse(null);
        if (mp4 != null) {
            String href = mp4.getHref();
            if (StringUtils.isNotBlank(href)) {
                UrlEntity oneSort = urlRepository.findSort(Pageable.ofSize(1)).getContent().get(0);
                if (oneSort != null) {
                    return oneSort.get_id() + href;
                }
            }
        }
        return null;
    }
}